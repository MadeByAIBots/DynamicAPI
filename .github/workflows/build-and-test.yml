name: Build and Test

on:
  push:
    branches: [ '*' ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Print working directory before checkout
        run: pwd
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Execute build script
        run: bash ./build.sh

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Print working directory before checkout
        run: pwd
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate Auth Token
        run: bash ./generate-auth-token.sh
        
      - name: Build
        run: bash build.sh
        
      - name: Execute test script
        run: bash ./test.sh

  run:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run and Test
        run: bash run-and-test.sh
        
  install:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run publish.sh
        run: bash publish.sh
        
      - name: Run prepare.sh script
        run: sudo bash prepare.sh
        
      - name: Run install.sh script
        run: sudo bash install.sh
        
      - name: Check Service Status
        run: systemctl status dynamicapi || true

      - name: Output Service Logs
        run: journalctl -u dynamicapi
        
  graduate:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run graduate.py
        run: python3 graduate.py
